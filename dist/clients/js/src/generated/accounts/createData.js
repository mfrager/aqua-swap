/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { assertAccountExists, assertAccountsExist, combineCodec, decodeAccount, fetchEncodedAccount, fetchEncodedAccounts, getStructDecoder, getStructEncoder, getU128Decoder, getU128Encoder, getU64Decoder, getU64Encoder, getU8Decoder, getU8Encoder, } from '@solana/kit';
export function getCreateDataEncoder() {
    return getStructEncoder([
        ['uuid', getU128Encoder()],
        ['price', getU64Encoder()],
        ['bumpSeed', getU8Encoder()],
    ]);
}
export function getCreateDataDecoder() {
    return getStructDecoder([
        ['uuid', getU128Decoder()],
        ['price', getU64Decoder()],
        ['bumpSeed', getU8Decoder()],
    ]);
}
export function getCreateDataCodec() {
    return combineCodec(getCreateDataEncoder(), getCreateDataDecoder());
}
export function decodeCreateData(encodedAccount) {
    return decodeAccount(encodedAccount, getCreateDataDecoder());
}
export async function fetchCreateData(rpc, address, config) {
    const maybeAccount = await fetchMaybeCreateData(rpc, address, config);
    assertAccountExists(maybeAccount);
    return maybeAccount;
}
export async function fetchMaybeCreateData(rpc, address, config) {
    const maybeAccount = await fetchEncodedAccount(rpc, address, config);
    return decodeCreateData(maybeAccount);
}
export async function fetchAllCreateData(rpc, addresses, config) {
    const maybeAccounts = await fetchAllMaybeCreateData(rpc, addresses, config);
    assertAccountsExist(maybeAccounts);
    return maybeAccounts;
}
export async function fetchAllMaybeCreateData(rpc, addresses, config) {
    const maybeAccounts = await fetchEncodedAccounts(rpc, addresses, config);
    return maybeAccounts.map((maybeAccount) => decodeCreateData(maybeAccount));
}
export function getCreateDataSize() {
    return 25;
}
