"use strict";
/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AquaSwapInstruction = exports.AquaSwapAccount = exports.AQUA_SWAP_PROGRAM_ADDRESS = void 0;
exports.identifyAquaSwapInstruction = identifyAquaSwapInstruction;
var kit_1 = require("@solana/kit");
exports.AQUA_SWAP_PROGRAM_ADDRESS = '26iQhBNLcPpV5gQnbCAqLR9m1rY7ZG88Qvmm2yLTKUiQ';
var AquaSwapAccount;
(function (AquaSwapAccount) {
    AquaSwapAccount[AquaSwapAccount["CreateData"] = 0] = "CreateData";
    AquaSwapAccount[AquaSwapAccount["SwapData"] = 1] = "SwapData";
    AquaSwapAccount[AquaSwapAccount["SwapState"] = 2] = "SwapState";
})(AquaSwapAccount || (exports.AquaSwapAccount = AquaSwapAccount = {}));
var AquaSwapInstruction;
(function (AquaSwapInstruction) {
    AquaSwapInstruction[AquaSwapInstruction["Create"] = 0] = "Create";
    AquaSwapInstruction[AquaSwapInstruction["Swap"] = 1] = "Swap";
    AquaSwapInstruction[AquaSwapInstruction["Close"] = 2] = "Close";
})(AquaSwapInstruction || (exports.AquaSwapInstruction = AquaSwapInstruction = {}));
function identifyAquaSwapInstruction(instruction) {
    var data = 'data' in instruction ? instruction.data : instruction;
    if ((0, kit_1.containsBytes)(data, (0, kit_1.getU8Encoder)().encode(0), 0)) {
        return AquaSwapInstruction.Create;
    }
    if ((0, kit_1.containsBytes)(data, (0, kit_1.getU8Encoder)().encode(1), 0)) {
        return AquaSwapInstruction.Swap;
    }
    if ((0, kit_1.containsBytes)(data, (0, kit_1.getU8Encoder)().encode(2), 0)) {
        return AquaSwapInstruction.Close;
    }
    throw new Error('The provided instruction could not be identified as a aquaSwap instruction.');
}
